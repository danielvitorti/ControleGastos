// <auto-generated />
using System;
using ControleGastos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControleGastos.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("ControleGastos.Models.Competencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LancamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodoFinal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodoInicial")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.HasIndex("LancamentoId");

                    b.ToTable("Competencia");
                });

            modelBuilder.Entity("ControleGastos.Models.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LancamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.Property<int?>("competenciaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LancamentoId");

                    b.HasIndex("competenciaId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("ControleGastos.Models.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LancamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LancamentoId");

                    b.ToTable("FormaPagamento");
                });

            modelBuilder.Entity("ControleGastos.Models.Lancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoLancamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.Property<int?>("competenciaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("contaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("formaPagamentoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("competenciaId");

                    b.HasIndex("contaId");

                    b.HasIndex("formaPagamentoId");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("ControleGastos.Models.Competencia", b =>
                {
                    b.HasOne("ControleGastos.Models.Conta", null)
                        .WithMany("Competencias")
                        .HasForeignKey("ContaId");

                    b.HasOne("ControleGastos.Models.Lancamento", null)
                        .WithMany("Competencias")
                        .HasForeignKey("LancamentoId");
                });

            modelBuilder.Entity("ControleGastos.Models.Conta", b =>
                {
                    b.HasOne("ControleGastos.Models.Lancamento", null)
                        .WithMany("Contas")
                        .HasForeignKey("LancamentoId");

                    b.HasOne("ControleGastos.Models.Competencia", "competencia")
                        .WithMany()
                        .HasForeignKey("competenciaId");
                });

            modelBuilder.Entity("ControleGastos.Models.FormaPagamento", b =>
                {
                    b.HasOne("ControleGastos.Models.Lancamento", null)
                        .WithMany("FormasPagamento")
                        .HasForeignKey("LancamentoId");
                });

            modelBuilder.Entity("ControleGastos.Models.Lancamento", b =>
                {
                    b.HasOne("ControleGastos.Models.Competencia", "competencia")
                        .WithMany()
                        .HasForeignKey("competenciaId");

                    b.HasOne("ControleGastos.Models.Conta", "conta")
                        .WithMany()
                        .HasForeignKey("contaId");

                    b.HasOne("ControleGastos.Models.FormaPagamento", "formaPagamento")
                        .WithMany()
                        .HasForeignKey("formaPagamentoId");
                });
#pragma warning restore 612, 618
        }
    }
}
